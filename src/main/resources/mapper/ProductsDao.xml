<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ali.dao.ProductsDao">

    <resultMap type="com.ali.entity.Products" id="ProductsMap">
        <result property="pid" column="pid" jdbcType="VARCHAR"/>
        <result property="pname" column="pname" jdbcType="VARCHAR"/>
        <result property="pimage" column="pimage" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="OTHER"/>
        <result property="tid" column="tid" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ProductsMap">
        select
          pid, pname, pimage, price, tid
        from orders.products
        where pid = #{pid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ProductsMap">
        select
          pid, pname, pimage, price, tid
        from orders.products
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="ProductsMap">
        select
        pid, pname, pimage, price, tid
        from orders.products
        <where>
            <if test="pid != null and pid != ''">
                and pid = #{pid}
            </if>
            <if test="pname != null and pname != ''">
                and pname = #{pname}
            </if>
            <if test="pimage != null and pimage != ''">
                and pimage = #{pimage}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="tid != null and tid != ''">
                and tid = #{tid}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="pid" useGeneratedKeys="true">
        insert into orders.products(pname, pimage, price, tid)
        values (#{pname}, #{pimage}, #{price}, #{tid})
    </insert>

    <insert id="insertBatch" keyProperty="pid" useGeneratedKeys="true">
        insert into orders.products(pname, pimage, price, tid)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.pname}, #{entity.pimage}, #{entity.price}, #{entity.tid})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="pid" useGeneratedKeys="true">
        insert into orders.products(pname, pimage, price, tid)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.pname}, #{entity.pimage}, #{entity.price}, #{entity.tid})
        </foreach>
        on duplicate key update
        pname = values(pname) , pimage = values(pimage) , price = values(price) , tid = values(tid)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update orders.products
        <set>
            <if test="pname != null and pname != ''">
                pname = #{pname},
            </if>
            <if test="pimage != null and pimage != ''">
                pimage = #{pimage},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="tid != null and tid != ''">
                tid = #{tid},
            </if>
        </set>
        where pid = #{pid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from orders.products where pid = #{pid}
    </delete>

</mapper>