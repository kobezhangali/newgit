<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aa.dao.OrdersDao">

    <resultMap type="com.aa.entity.Orders" id="OrdersMap">
        <result property="oid" column="oid" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="OTHER"/>
        <result property="addr" column="addr" jdbcType="VARCHAR"/>
        <result property="paytype" column="payType" jdbcType="VARCHAR"/>
        <result property="uid" column="uid" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="OrdersMap">
        select
          oid, price, addr, payType, uid
        from orders.orders
        where oid = #{oid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="OrdersMap">
        select
          oid, price, addr, payType, uid
        from orders.orders
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="OrdersMap">
        select
        oid, price, addr, payType, uid
        from orders.orders
        <where>
            <if test="oid != null and oid != ''">
                and oid = #{oid}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="addr != null and addr != ''">
                and addr = #{addr}
            </if>
            <if test="paytype != null and paytype != ''">
                and payType = #{paytype}
            </if>
            <if test="uid != null">
                and uid = #{uid}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="oid" useGeneratedKeys="true">
        insert into orders.orders(price, addr, payType, uid)
        values (#{price}, #{addr}, #{paytype}, #{uid})
    </insert>

    <insert id="insertBatch" keyProperty="oid" useGeneratedKeys="true">
        insert into orders.orders(price, addr, payType, uid)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.price}, #{entity.addr}, #{entity.paytype}, #{entity.uid})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="oid" useGeneratedKeys="true">
        insert into orders.orders(price, addr, payType, uid)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.price}, #{entity.addr}, #{entity.paytype}, #{entity.uid})
        </foreach>
        on duplicate key update
        price = values(price) , addr = values(addr) , payType = values(payType) , uid = values(uid)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update orders.orders
        <set>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="addr != null and addr != ''">
                addr = #{addr},
            </if>
            <if test="paytype != null and paytype != ''">
                payType = #{paytype},
            </if>
            <if test="uid != null">
                uid = #{uid},
            </if>
        </set>
        where oid = #{oid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from orders.orders where oid = #{oid}
    </delete>

</mapper>